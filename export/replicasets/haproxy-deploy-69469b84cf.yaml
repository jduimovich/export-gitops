apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    app.openshift.io/connects-to: '[ "nginx-html-server",  "fib-service-in-go",  "fib-service-in-quarkus",  "fib-service-in-node"]'
    container.apparmor.security.beta.kubernetes.io/haproxy-deploy: runtime/default
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
  labels:
    app: haproxy
    pod-template-hash: 69469b84cf
  name: haproxy-deploy-69469b84cf
  namespace: n1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: haproxy
      pod-template-hash: 69469b84cf
  template:
    metadata:
      labels:
        app: haproxy
        pod-template-hash: 69469b84cf
    spec:
      containers:
        - image: docker.io/jduimovich/haproxy:a3b1777
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: haproxy-deploy
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
      terminationGracePeriodSeconds: 30
