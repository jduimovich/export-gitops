apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/vcs-ref: ""
    app.openshift.io/vcs-uri: https://github.com/jduimovich/simple-app
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"simple-app:latest","namespace":"n1"},"fieldPath":"spec.template.spec.containers[?(@.name==\"simple-app\")].image","pause":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  labels:
    app: simple-app
    app.kubernetes.io/component: simple-app
    app.kubernetes.io/instance: simple-app
    app.kubernetes.io/name: nodejs
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: 14-ubi7
  name: simple-app
  namespace: n1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simple-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: simple-app
        deploymentconfig: simple-app
    spec:
      containers:
        - image: image-registry.openshift-image-registry.svc:5000/n1/simple-app@sha256:837ad4e110bf4cb3dfa37eb2674777ba6b7a172126900026b34ae2cdd673ebe7
          imagePullPolicy: Always
          name: simple-app
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
